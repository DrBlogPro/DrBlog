<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"  

	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop 	
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
">

	<!-- xml与注解混合配置 -->
	<!-- 加入包的扫描，以实例化bean -->
	<context:component-scan base-package="com.dr.dao.impl,com.dr.biz.impl,com.dr.aspect,com.dr.web.controller" />

	<aop:aspectj-autoproxy />

	<!-- 读取数据库联接配置 -->
	<context:property-placeholder location="classpath*:jdbc.properties" />

	<bean id="dataSource"
		class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close" >
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	
	<!-- 创建 mybatis的  sqlSessionFactory bean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" >
		<property name="dataSource" ref="dataSource"></property>
		<!-- 去掉mybatis的配置文件   ,在 spring中完成mybatis的配置  -->
		
		<!-- 加入mybatis的一些属性配置 -->
		<property name="configurationProperties">
			<props>
				<prop key="logImpl">LOG4j</prop>
			</props>
		</property>
		
		<!-- 别名包的配置 -->
		<property name="typeAliasesPackage" value="com.dr.bean" />
		
		<!-- mybatis映射文件 -->
		<property name="mapperLocations" value="classpath*:com/dr/mapper/*.xml"></property>
		
	</bean>
	
	<bean id="viewResolver"
        class="org.springframework.web.servlet.view.UrlBasedViewResolver">
    	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    	<property name="prefix" value="/WEB-INF/jsp/"/>
    	<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- 静态资源 -->
	<mvc:annotation-driven/>
	 <mvc:default-servlet-handler/>
	
	<!-- 
	 <mvc:resources location="/css/" mapping="/css/**"  ></mvc:resources>
	 <mvc:resources location="/js/" mapping="/js/**"  ></mvc:resources>
	 <mvc:resources location="/" mapping="/*.html"  ></mvc:resources>
	 -->
	
	
	
	
	
	
	
	
	
	<!-- 上传配置 -->
	<bean id="multipartResolve"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="2000000" />
	</bean>
	
	<!-- 事务管理 -->
	<!-- 
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="find*" read-only="true"/>
			<tx:method name="retrieve*" read-only="true"/>
			<tx:method name="*" read-only="false"/>
		</tx:attributes>
	</tx:advice>
	 -->

	<!-- 切面 -->
	<!-- 
	<aop:config>
		<aop:pointcut expression="execution(* com.yc.biz.impl.*.*(..))" id="abc"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="abc"/>
	</aop:config>
	-->
	
	
	<!-- xml配置 是否可注解？
	<bean id="student" class="com.yc.web.servlets.StudentController"></bean>
	 -->
	 
	 



</beans>